
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:11111111@localhost:5432/nebb-forms?schema=public"
}

model User {
  id            String   @id @default(uuid())
  name          String?
  email         String   @unique
  emailVerified Boolean  @default(false)
  organizationName String
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  sessions Session[]
  accounts Account[]
  forms    Form[] 

  @@map("user")
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id @default(uuid())
  userId                String
  accountId             String    @unique
  providerId            String
  accessToken           String?
  refreshToken          String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  idToken               String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String   @id @default(uuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("verification")
}

enum Type {
  Private
  Public
}

model Form {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  topic       String
  description String
  categories  String?
  status      String
  link        String   @unique
  submissions Int
  type        Type
  accessMode  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  fields      Field[] 
  datas Data[]  
  
  @@map("form")
}


model Field {
  id        String  @id @default(cuid())
  formId    String
  form      Form    @relation(fields: [formId], references: [id], onDelete: Cascade)
  label     String
  type      String
  category  String?
  required  Boolean

  @@map("field")
}


model Data {
  id        String   @id @default(cuid())
  data      Json
  formId    String
  form      Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

